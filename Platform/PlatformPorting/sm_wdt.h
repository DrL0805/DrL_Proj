#ifndef __SM_WDT_H
#define __SM_WDT_H

#include "platform_common.h"

//**********************************************************************
// 函数功能: 初始化WatchDog Timer
// 输入参数：	
// 返回参数：
//**********************************************************************
extern void SMDrv_WDT_Init(void);

//*****************************************************************************
//函数功能：打开看门狗
// 输入：	resetCount：	复位计数，时钟源为128HZ，最大设置值为255，即2秒
// 							需比中断计数大
//			interruptCount：中断计数，时钟源为128HZ，最大设置值为255，即2秒
//							需比复位计数小
// 			IsrCb:			看门狗中断复位回调
// 返回：	无
//*****************************************************************************
extern ret_type SMDrv_WDT_Open(uint16 resetCount,uint16 interruptCount,comm_cb *wdt_callback);

//*****************************************************************************
//函数功能：关闭看门狗，重新开启需重新初始化
// 输入：	无
// 返回：	无
//*****************************************************************************
extern ret_type SMDrv_WDT_Close(void);

//**********************************************************************
// 函数功能:  设置WDT中断优先级,并启动WDT中断
// 输入参数:
//     prio:中断优先级，bit0~2位值有效
// 返回参数： 无
//**********************************************************************
extern ret_type SMDrv_WDT_SetIsrPrio(uint32 prio);

//*****************************************************************************
//函数功能：复位看门狗
// 输入：	无
// 返回：	无
//*****************************************************************************
extern void SMDrv_WDT_ReStart(void);

#endif

